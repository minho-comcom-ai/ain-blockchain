{ "rules": {
    ".write": false,
    "afan": {
        ".write": true
    },
    "stakes": {
        "$uid": {
            ".write": "auth === '$uid'"
        }
    },
    "_recentForgers": {
        ".write": "(newData.length < 20) && (db.get(`_voting/preCommits`) > db.get(`_voting/threshold`)) && (db.get(`_voting/forger`) === auth)"
    },
    "_voting": {
        ".write": "db.get(`_voting`) === null || (db.get(`_recentForgers`)[db.get(`_recentForgers`).length - Math.floor((currentTime - db.get(`_voting/time`)) / 6000)] === auth)" ,
        "blockHash": {
            ".write": "db.get(`_voting/forger`) === auth"
        },
        "next_round_validators": {
            ".write": "Object.keys(db.get(`stakes`)).indexOf(auth) > -1"
        },
        "preVotes":{
            ".write": "db.get(`_voting/blockHash`) !== null"
        },
        "preCommits": {
            ".write":  "db.get(`_voting/preVotes`) > db.get(`_voting/threshold`)  "
        }
    },
    "nested":{
        ".write": true
    },
    "new":{
        ".write": true
    },
    "test": {
        ".write": true,
        "ai": {
        },
        "comcom": {
        },
        "billing_keys": {
            "update_billing": {
            }
        },
        "users":{
            "$uid": {
                ".write": true,
                "balance": {
                    ".write": "typeof newData === 'number' && newData >= 0"
                    },
                "info": {
                    ".write": "oldData !== null"
                },
                "balance_info": {
                    ".write": "db.get(`test/billing_keys/update_billing/$uid`) !== null"
                },
                "next_counter": {
                    ".write": "typeof newData === 'number' && newData === oldData + 1"
                }
            }
          },
          "second_users": {
              "$wcard1":{
                  "$wcard2": {
                      ".write": "'$wcard1' == '$wcard2'"
                  }
              }
          }
        }
    }
}